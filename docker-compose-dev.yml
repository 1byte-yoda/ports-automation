version: "3.7"

services:
  airflow:
    container_name: airflow
    build:
      context: ./data_pipeline/docker/airflow
      dockerfile: Dockerfile.airflow.dev
    depends_on:
      - postgresqldb
      - mongodb
    volumes:
      - ./data_pipeline/docker:/root/airflow/docker
      - ./data_pipeline/dags:/root/airflow/dags
      - ./data_pipeline/scraper:/root/airflow/scraper
      - ./data_pipeline/plugins:/root/airflow/plugins
      - ./data_pipeline/output:/root/airflow/output
      - ./data_pipeline/tests:/root/airflow/tests
      - ./data_pipeline/.env.example:/root/airflow/.env
      - ./data_pipeline/htmlcov:/root/airflow/htmlcov
      - ./data_pipeline/.coveragerc:/root/airflow/.coveragerc
      - ./data_pipeline/Makefile:/root/airflow/Makefile

    ports:
      - "8080:8080"
    env_file:
      - ./data_pipeline/.env.example
    init: true
    restart: always
    healthcheck:
      test: ["CMD", "nc", "-z", "airflow", "8080"]
      timeout: 30s
      interval: 30s
      retries: 10

  postgresqldb:
    container_name: postgresqldb
    build:
      context: ./data_pipeline/docker/db
      dockerfile: Dockerfile.db.dev
    ports:
      - 5432:5432
    env_file:
      - ./data_pipeline/.env.example
    volumes:
      - postgresqldb:/data/postgresqldb
  
  postgresqldb_test:
    container_name: postgresqldb_test
    build:
      context: ./data_pipeline/docker/db
      dockerfile: Dockerfile.db.test
    ports:
      - 5433:5433
    env_file:
      - ./data_pipeline/.env.example
    volumes:
      - postgresqldb_test:/data/postgresqldb_test
    
  mongodb:
    container_name: mongodb
    image: mongo:4.4.2-bionic
    env_file:
      - ./data_pipeline/.env.example
    ports:
      - 27017:27017
    volumes:
      - mongodb:/data/mongo_db

volumes:
  data_pipeline:
  postgresqldb:
  mongodb:
  postgresqldb_test:
